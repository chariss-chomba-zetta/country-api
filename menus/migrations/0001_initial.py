# Generated by Django 3.2 on 2024-02-27 13:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DfsService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=36, unique=True)),
                ('service_function', models.CharField(max_length=255, unique=True)),
                ('url', models.CharField(max_length=255)),
                ('method', models.CharField(choices=[('post', 'Post'), ('get', 'Get'), ('put', 'Put'), ('delete', 'Delete'), ('patch', 'Patch')], default='post', max_length=10)),
                ('session_key', models.CharField(blank=True, max_length=255, null=True)),
                ('service_degradation_key', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
                ('language_code', models.CharField(help_text='ISO 639-1: two-letter code, lowercase. REF: https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes', max_length=2)),
                ('language_name', models.CharField(help_text='ISO language name. REF: https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MenuType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShortCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
                ('institution', models.CharField(max_length=255)),
                ('shortcode', models.CharField(max_length=50)),
                ('country', models.CharField(help_text='ISO 3166-1 alpha-2 country code. REF: https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes', max_length=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UssdMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
                ('name', models.CharField(help_text='Unique Screen name', max_length=50, unique=True)),
                ('has_options', models.BooleanField(default=False, help_text='Used only on the [menu screens] to specify is menu has predefined options or options that are iterated through. When checked, predefined options are expected.')),
                ('input_identifier', models.CharField(blank=True, help_text='Used only on the [input screens] to specify the key in session that the user input will be stored under.', max_length=50)),
                ('input_screen_has_back', models.BooleanField(default=True, help_text='Only used in the "input_screen" screen type. If marked and input_screen_back_screen is populated, will take user back to the screen which input_screen_back_screen refers. /0 option/. Otherwise, it will lead user to the last visited"visible screen" in the recorded session.')),
                ('input_screen_has_home', models.BooleanField(default=True, help_text='Only used in the "input_screen" screen type.Marks if home /00 option/ is available to this screen.')),
                ('input_screen_has_pin_reset', models.BooleanField(default=False, help_text='Only used in the "input_screen" screen type.Marks if reset pin /1 option/ is available to this screen.')),
                ('menu_screen_has_back', models.BooleanField(default=True, help_text='Only used in the "menu_screen" screen type. If marked and menu_screen_back_screen is populated, will take user back to the screen which menu_screen_back_screen refers. Option is added automatically')),
                ('menu_screen_has_home', models.BooleanField(default=True, help_text='Only used in the "menu_screen" screen type.Marks if home menu option is available to this screen.')),
                ('dfs_service', models.ForeignKey(blank=True, help_text='Used only on the [function screens] to specify the function that is going to be run on that screen.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ussd_menu_dfs_service', to='menus.dfsservice')),
                ('input_screen_back_screen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='back_screen', to='menus.ussdmenu')),
                ('menu_screen_back_screen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu_back_screen', to='menus.ussdmenu')),
                ('menu_type', models.ForeignKey(help_text='Type of the screen', on_delete=django.db.models.deletion.CASCADE, related_name='ussd_menu_menu_type', to='menus.menutype')),
                ('next_screen', models.ForeignKey(blank=True, help_text='Specifies the default next screen.For [input screens] and [router screens] this is the screen that service will take user to if [router options] or [input screen conditions] fail.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ussd_menu_next_screen', to='menus.ussdmenu')),
                ('shortcode', models.ForeignKey(help_text='Specifies for what dial short code service is this menu for.', on_delete=django.db.models.deletion.CASCADE, related_name='ussd_menu_shortcode', to='menus.shortcode')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RouterOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
                ('menu_expression', models.CharField(max_length=1024)),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='router_option_parent_screen', to='menus.ussdmenu')),
                ('next_screen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='router_option_next_screen', to='menus.ussdmenu')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NavigationLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('back_label', models.CharField(help_text='Used to specify the "BACK" for input screens and menu screens for selected language.Do not add prefix - will be added automatically.', max_length=25)),
                ('main_menu_label', models.CharField(help_text='Used to specify the "MAIN MENU" for input screens and menu screens for selected language.Do not add prefix - will be added automatically.', max_length=25)),
                ('pin_reset_label', models.CharField(help_text='Used to specify the "PIN RESET" flow for the conditional input menus for selected language.Do not add prefix - will be added automatically.', max_length=25)),
                ('language', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='navigation_label', to='menus.language')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MenuOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
                ('option_text', models.CharField(max_length=255)),
                ('order', models.PositiveSmallIntegerField()),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='menus.language')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_option_parent_screen', to='menus.ussdmenu')),
                ('next_screen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_option_next_screen', to='menus.ussdmenu')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item_text', models.CharField(max_length=512)),
                ('item_value', models.CharField(max_length=512)),
                ('with_items', models.CharField(max_length=512)),
                ('session_key', models.CharField(max_length=512)),
                ('ussd_menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_item_parent_screen', to='menus.ussdmenu')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ErrorLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('error_message', models.CharField(help_text='Defines the error message for that language, which will be shown when user do a wrong input.', max_length=150)),
                ('language', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='conditional_input_words', to='menus.language')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UssdLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('label_text', models.CharField(blank=True, max_length=500, null=True)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='menus.language')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='label_parent_screen', to='menus.ussdmenu')),
            ],
            options={
                'unique_together': {('menu', 'language')},
            },
        ),
    ]
